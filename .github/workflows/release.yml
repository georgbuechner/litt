name: Release Binaries

on:
  push:
    branches:
      - ci/44-create-prebuilt-binaries-in-gh-action

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binary-${{ matrix.os }}
          path: ./target/${{ matrix.target }}/release/litt${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set version
        run: echo "RELEASE_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Download and Upload Release Assets
        uses: ./.github/actions/download-upload-assets
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Download and Upload Release Assets'
      - description: 'Download artifacts and upload them as release assets'
      - inputs:
        upload_url:
          description: 'URL to upload release assets'
          required: true
        github_token:
          description: 'GitHub token'
          required: true
      - runs:
        using: 'composite'
        steps:
          - name: Download binaries from artifacts
            uses: actions/download-artifact@v2
            with:
              name: binary-${{ matrix.os }}
              path: binaries/${{ matrix.os }}
            shell: bash

          - name: Upload Release Asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ inputs.github_token }}
            with:
              upload_url: ${{ inputs.upload_url }}
              asset_path: binaries/${{ matrix.os }}/litt${{ matrix.os == 'windows-latest' && '.exe' || '' }}
              asset_name: litt-${{ matrix.os }}
              asset_content_type: application/octet-stream
            shell: bash
